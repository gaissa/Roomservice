  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>Parsley.js/dist/parsley.min.js at master Â· guillaumepotier/Parsley.js</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <link rel="xhr-socket" href="/_sockets">
    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="OjSeeH0BnM7LLeaauUMUU8MsI1I2C9n2r0yNzjwOdA8=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-821bbed259d46e5d6b74d76c79635696f4250cec.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-7a4dbbe68d3ae5fa8a5f35a6d6079c2295669ee7.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-7bbf071153c34e06f655506282fcc39660e47aad.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-b8765bc6568a8f1099c7d93b7530cf00fb4fb115.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="dd113e253765536a7eb3e48f8eef8d42">

        <link data-pjax-transient rel='permalink' href='/guillaumepotier/Parsley.js/blob/b42e2e2e5915dbe9449913d5c4882a891acff1e1/dist/parsley.min.js'>
    <meta property="og:title" content="Parsley.js"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/guillaumepotier/Parsley.js"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/e19d83a9f5cf6323abe9be47a7af73cd?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="Parsley.js - Validate your forms, frontend, without writting a single line of javascript!"/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="guillaumepotier/Parsley.js"/>

    <meta name="description" content="Parsley.js - Validate your forms, frontend, without writting a single line of javascript!" />

  <link href="https://github.com/guillaumepotier/Parsley.js/commits/master.atom" rel="alternate" title="Recent Commits to Parsley.js:master" type="application/atom+xml" />

  </head>


  <body class="logged_in page-blob windows vis-public env-production  ">
    <div id="wrapper">

      

      
      
      

      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-blacktocat" href="https://github.com/">
  <span class="mega-icon mega-icon-blacktocat"></span>
</a>

    <div class="divider-vertical"></div>

      <a href="/notifications" class="notification-indicator tooltipped downwards" title="You have no unread notifications">
    <span class="mail-status all-read"></span>
  </a>
  <div class="divider-vertical"></div>


      <div class="command-bar js-command-bar  ">
            <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">
  <a href="/search/advanced" class="advanced-search-icon tooltipped downwards command-bar-search" id="advanced_search" title="Advanced search"><span class="mini-icon mini-icon-advanced-search "></span></a>

  <input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" data-username="ottoo" autocapitalize="off">

  <span class="mini-icon help tooltipped downwards" title="Show command bar help">
    <span class="mini-icon mini-icon-help"></span>
  </span>

  <input type="hidden" name="ref" value="cmdform">

    <input type="hidden" class="js-repository-name-with-owner" value="guillaumepotier/Parsley.js"/>
    <input type="hidden" class="js-repository-branch" value="master"/>
    <input type="hidden" class="js-repository-tree-sha" value="c31d7d6622af85a8801a0ef0c6216ecf161c12a8"/>

  <div class="divider-vertical"></div>
</form>
        <ul class="top-nav">
            <li class="explore"><a href="https://github.com/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="http://help.github.com">Help</a></li>
        </ul>
      </div>

    

  
    <ul id="user-links">
      <li>
        <a href="https://github.com/ottoo" class="name">
          <img height="20" src="https://secure.gravatar.com/avatar/54e96412cc6fe6073dbfb814b25c7a75?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /> ottoo
        </a>
      </li>
      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo">
          <span class="mini-icon mini-icon-create"></span>
        </a>
      </li>
      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          title="Account settings ">
          <span class="mini-icon mini-icon-account-settings"></span>
        </a>
      </li>
      <li>
        <a href="/logout" data-method="post" id="logout" class="tooltipped downwards" title="Sign out">
          <span class="mini-icon mini-icon-logout"></span>
        </a>
      </li>
    </ul>



    
  </div>
</div>

      

      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              


<ul class="pagehead-actions">


    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="OjSeeH0BnM7LLeaauUMUU8MsI1I2C9n2r0yNzjwOdA8=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="7191565" />

    <div class="select-menu js-menu-container js-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">
          <span class="mini-icon mini-icon-watching"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder js-menu-content">
        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container">

            <div class="select-menu-item js-navigation-item js-navigation-target selected">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for discussions in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-watching"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item js-navigation-target ">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item js-navigation-target ">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

    <li class="js-toggler-container js-social-container starring-container ">
      <a href="/guillaumepotier/Parsley.js/unstar" class="minibutton js-toggler-target star-button starred upwards" title="Unstar this repo" data-remote="true" data-method="post" rel="nofollow">
        <span class="mini-icon mini-icon-remove-star"></span>
        <span class="text">Unstar</span>
      </a>
      <a href="/guillaumepotier/Parsley.js/star" class="minibutton js-toggler-target star-button unstarred upwards" title="Star this repo" data-remote="true" data-method="post" rel="nofollow">
        <span class="mini-icon mini-icon-star"></span>
        <span class="text">Star</span>
      </a>
      <a class="social-count js-social-count" href="/guillaumepotier/Parsley.js/stargazers">3,133</a>
    </li>

        <li>
          <a href="/guillaumepotier/Parsley.js/fork" class="minibutton js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="nofollow" data-method="post">
            <span class="mini-icon mini-icon-branch-create"></span>
            <span class="text">Fork</span>
          </a>
          <a href="/guillaumepotier/Parsley.js/network" class="social-count">380</a>
        </li>


</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-public-repo"></span>
                <span class="author vcard">
                  <a href="/guillaumepotier" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">guillaumepotier</span>
                  </a></span> /
                <strong><a href="/guillaumepotier/Parsley.js" class="js-current-repository">Parsley.js</a></strong>
              </h1>
            </div>

            
  <ul class="tabs">
    <li><a href="/guillaumepotier/Parsley.js" class="selected" highlight="repo_source repo_downloads repo_commits repo_tags repo_branches">Code</a></li>
    <li><a href="/guillaumepotier/Parsley.js/network" highlight="repo_network">Network</a></li>
    <li><a href="/guillaumepotier/Parsley.js/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>5</span></a></li>

      <li><a href="/guillaumepotier/Parsley.js/issues" highlight="repo_issues">Issues <span class='counter'>41</span></a></li>

      <li><a href="/guillaumepotier/Parsley.js/wiki" highlight="repo_wiki">Wiki</a></li>


    <li><a href="/guillaumepotier/Parsley.js/graphs" highlight="repo_graphs repo_contributors">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/guillaumepotier/Parsley.js/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter ">21</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="mini-icon mini-icon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">

        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div>
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches">

            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/gh-pages/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="gh-pages" rel="nofollow" title="gh-pages">gh-pages</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target selected">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/master/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
                </div> <!-- /.select-menu-item -->
            </div>

              <div class="select-menu-no-results">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags">
            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.15/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.15" rel="nofollow" title="1.1.15">1.1.15</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.14/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.14" rel="nofollow" title="1.1.14">1.1.14</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.13/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.13" rel="nofollow" title="1.1.13">1.1.13</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.12/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.12" rel="nofollow" title="1.1.12">1.1.12</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.11/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.11" rel="nofollow" title="1.1.11">1.1.11</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.10/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.10" rel="nofollow" title="1.1.10">1.1.10</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.9/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.9" rel="nofollow" title="1.1.9">1.1.9</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.8/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.8" rel="nofollow" title="1.1.8">1.1.8</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.6/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.6" rel="nofollow" title="1.1.6">1.1.6</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.5/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.5" rel="nofollow" title="1.1.5">1.1.5</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.4/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.4" rel="nofollow" title="1.1.4">1.1.4</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.3/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.3" rel="nofollow" title="1.1.3">1.1.3</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.2/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.2" rel="nofollow" title="1.1.2">1.1.2</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.1.0/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.1.0" rel="nofollow" title="1.1.0">1.1.0</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/1.0.0/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="1.0.0" rel="nofollow" title="1.0.0">1.0.0</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/0.2.0/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.2.0" rel="nofollow" title="0.2.0">0.2.0</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/0.1.4/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.1.4" rel="nofollow" title="0.1.4">0.1.4</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/0.1.3/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.1.3" rel="nofollow" title="0.1.3">0.1.3</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/0.1.2/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.1.2" rel="nofollow" title="0.1.2">0.1.2</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/0.1.1/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.1.1" rel="nofollow" title="0.1.1">0.1.1</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item js-navigation-target ">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/guillaumepotier/Parsley.js/blob/0.1.0/dist/parsley.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.1.0" rel="nofollow" title="0.1.0">0.1.0</a>
                </div> <!-- /.select-menu-item -->
            </div>

            <div class="select-menu-no-results">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/guillaumepotier/Parsley.js" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/guillaumepotier/Parsley.js/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/guillaumepotier/Parsley.js/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">2</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:b9383704426a054d467308184b840e6a -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:b9383704426a054d467308184b840e6a -->


<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/guillaumepotier/Parsley.js" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">Parsley.js</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/guillaumepotier/Parsley.js/tree/master/dist" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">dist</span></a></span><span class="separator"> / </span><strong class="final-path">parsley.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="dist/parsley.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="mini-icon mini-icon-clipboard"></span></span>
        </div>

      <a href="/guillaumepotier/Parsley.js/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/9b335f8228dbbf55711ba32bab4cd591?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/adamjacobbecker" rel="author">adamjacobbecker</a></span>
    <time class="js-relative-date" datetime="2013-03-27T09:59:27-07:00" title="2013-03-27 09:59:27">March 27, 2013</time>
    <div class="commit-title">
        <a href="/guillaumepotier/Parsley.js/commit/bfe44c7741ac0d297357eb1d7e5de4719aee37c0" class="message">Override value using data-value attribute</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>9</strong> contributors</a></p>
          <a class="avatar tooltipped downwards" title="guillaumepotier" href="/guillaumepotier/Parsley.js/commits/master/dist/parsley.min.js?author=guillaumepotier"><img height="20" src="https://secure.gravatar.com/avatar/e19d83a9f5cf6323abe9be47a7af73cd?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="cfurrow" href="/guillaumepotier/Parsley.js/commits/master/dist/parsley.min.js?author=cfurrow"><img height="20" src="https://secure.gravatar.com/avatar/e8266b4cfab1393c6138ad0e5896c144?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="catearcher" href="/guillaumepotier/Parsley.js/commits/master/dist/parsley.min.js?author=catearcher"><img height="20" src="https://secure.gravatar.com/avatar/7eff395fce9a4c0b21cf56a6f2998a62?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="tehtorq" href="/guillaumepotier/Parsley.js/commits/master/dist/parsley.min.js?author=tehtorq"><img height="20" src="https://secure.gravatar.com/avatar/6c78f97ca8bb2ed3cb20b788fa2e0dc5?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="VoiceOfWisdom" href="/guillaumepotier/Parsley.js/commits/master/dist/parsley.min.js?author=VoiceOfWisdom"><img height="20" src="https://secure.gravatar.com/avatar/22fabdb6a4e267a45f44f5e2ca4058c0?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="oliveiraev" href="/guillaumepotier/Parsley.js/commits/master/dist/parsley.min.js?author=oliveiraev"><img height="20" src="https://secure.gravatar.com/avatar/ea366667c2d76458987cde5cdc1145c6?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="klw0" href="/guillaumepotier/Parsley.js/commits/master/dist/parsley.min.js?author=klw0"><img height="20" src="https://secure.gravatar.com/avatar/b5bb1b7955e422ed0e578ab45b2b7792?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="comensee" href="/guillaumepotier/Parsley.js/commits/master/dist/parsley.min.js?author=comensee"><img height="20" src="https://secure.gravatar.com/avatar/b60fba91e3dc6634c5bfe7cf0b0fc72e?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="adamjacobbecker" href="/guillaumepotier/Parsley.js/commits/master/dist/parsley.min.js?author=adamjacobbecker"><img height="20" src="https://secure.gravatar.com/avatar/9b335f8228dbbf55711ba32bab4cd591?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>


    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/e19d83a9f5cf6323abe9be47a7af73cd?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/guillaumepotier">guillaumepotier</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/e8266b4cfab1393c6138ad0e5896c144?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/cfurrow">cfurrow</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/7eff395fce9a4c0b21cf56a6f2998a62?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/catearcher">catearcher</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/6c78f97ca8bb2ed3cb20b788fa2e0dc5?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/tehtorq">tehtorq</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/22fabdb6a4e267a45f44f5e2ca4058c0?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/VoiceOfWisdom">VoiceOfWisdom</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/ea366667c2d76458987cde5cdc1145c6?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/oliveiraev">oliveiraev</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/b5bb1b7955e422ed0e578ab45b2b7792?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/klw0">klw0</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/b60fba91e3dc6634c5bfe7cf0b0fc72e?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/comensee">comensee</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/9b335f8228dbbf55711ba32bab4cd591?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/adamjacobbecker">adamjacobbecker</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/guillaumepotier/Parsley.js/blob/b42e2e2e5915dbe9449913d5c4882a891acff1e1/dist/parsley.min.js" data-title="Parsley.js/dist/parsley.min.js at master Â· guillaumepotier/Parsley.js Â· GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>36 lines (35 sloc)</span>
                <span>18.402 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                        <a class="minibutton tooltipped leftwards"
                           title="Clicking this button will automatically fork this project so you can edit the file"
                           href="/guillaumepotier/Parsley.js/edit/master/dist/parsley.min.js"
                           data-method="post" rel="nofollow">Edit</a>
                  <a href="/guillaumepotier/Parsley.js/raw/master/dist/parsley.min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/guillaumepotier/Parsley.js/blame/master/dist/parsley.min.js" class="button minibutton ">Blame</a>
                  <a href="/guillaumepotier/Parsley.js/commits/master/dist/parsley.min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="data type-javascript js-blob-data">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
</pre>
          </td>
          <td width="100%">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/* Parsley dist/parsley.min.js build version 1.1.15 http://parsleyjs.org */</span></div><div class='line' id='LC2'><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">messages</span><span class="o">=</span><span class="p">{</span><span class="nx">defaultMessage</span><span class="o">:</span><span class="s2">&quot;This value seems to be invalid.&quot;</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="p">{</span><span class="nx">email</span><span class="o">:</span><span class="s2">&quot;This value should be a valid email.&quot;</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="s2">&quot;This value should be a valid url.&quot;</span><span class="p">,</span><span class="nx">urlstrict</span><span class="o">:</span><span class="s2">&quot;This value should be a valid url.&quot;</span><span class="p">,</span><span class="nx">number</span><span class="o">:</span><span class="s2">&quot;This value should be a valid number.&quot;</span><span class="p">,</span><span class="nx">digits</span><span class="o">:</span><span class="s2">&quot;This value should be digits.&quot;</span><span class="p">,</span><span class="nx">dateIso</span><span class="o">:</span><span class="s2">&quot;This value should be a valid date (YYYY-MM-DD).&quot;</span><span class="p">,</span><span class="nx">alphanum</span><span class="o">:</span><span class="s2">&quot;This value should be alphanumeric.&quot;</span><span class="p">,</span><span class="nx">phone</span><span class="o">:</span><span class="s2">&quot;This value should be a valid phone number.&quot;</span><span class="p">},</span><span class="nx">notnull</span><span class="o">:</span><span class="s2">&quot;This value should not be null.&quot;</span><span class="p">,</span></div><div class='line' id='LC3'><span class="nx">notblank</span><span class="o">:</span><span class="s2">&quot;This value should not be blank.&quot;</span><span class="p">,</span><span class="nx">required</span><span class="o">:</span><span class="s2">&quot;This value is required.&quot;</span><span class="p">,</span><span class="nx">regexp</span><span class="o">:</span><span class="s2">&quot;This value seems to be invalid.&quot;</span><span class="p">,</span><span class="nx">min</span><span class="o">:</span><span class="s2">&quot;This value should be greater than %s.&quot;</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="s2">&quot;This value should be lower than %s.&quot;</span><span class="p">,</span><span class="nx">range</span><span class="o">:</span><span class="s2">&quot;This value should be between %s and %s.&quot;</span><span class="p">,</span><span class="nx">minlength</span><span class="o">:</span><span class="s2">&quot;This value is too short. It should have %s characters or more.&quot;</span><span class="p">,</span><span class="nx">maxlength</span><span class="o">:</span><span class="s2">&quot;This value is too long. It should have %s characters or less.&quot;</span><span class="p">,</span><span class="nx">rangelength</span><span class="o">:</span><span class="s2">&quot;This value length is invalid. It should be between %s and %s characters long.&quot;</span><span class="p">,</span><span class="nx">mincheck</span><span class="o">:</span><span class="s2">&quot;You must select at least %s choices.&quot;</span><span class="p">,</span></div><div class='line' id='LC4'><span class="nx">maxcheck</span><span class="o">:</span><span class="s2">&quot;You must select %s choices or less.&quot;</span><span class="p">,</span><span class="nx">rangecheck</span><span class="o">:</span><span class="s2">&quot;You must select between %s and %s choices.&quot;</span><span class="p">,</span><span class="nx">equalto</span><span class="o">:</span><span class="s2">&quot;This value should be the same.&quot;</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">h</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">constructor</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">validators</span><span class="o">:</span><span class="p">{</span><span class="nx">notnull</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">},</span><span class="nx">notblank</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">required</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">required</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">notnull</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">notblank</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">type</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;number&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC5'><span class="sr">/^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;digits&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="sr">/^\d+$/</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;alphanum&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="sr">/^\w+$/</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;email&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="sr">/^((([a-z]|\d|[!#\$%&amp;&#39;\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&amp;&#39;\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i</span><span class="p">;</span></div><div class='line' id='LC6'><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;url&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="sr">/(https?|s?ftp|git)/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="s2">&quot;http://&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;urlstrict&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="sr">/^(https?|s?ftp|git):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&amp;&#39;\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&amp;&#39;\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&amp;&#39;\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&amp;&#39;\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&amp;&#39;\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i</span><span class="p">;</span></div><div class='line' id='LC7'><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;dateIso&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="sr">/^(\d{4})\D?(0[1-9]|1[0-2])\D?([12]\d|0[1-9]|3[01])$/</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;phone&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="sr">/^((\+\d{1,3}(-| )?\(?\d\)?(-| )?\d{1,5})|(\(?\d{2,6}\)?))(-| )?(\d{3,4})(-| )?(\d{4})(( x| ext)\d{1,5}){0,1}$/</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">regexp</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">regexpFlag</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">minlength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">maxlength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">rangelength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">minlength</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">maxlength</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span></div><div class='line' id='LC8'><span class="nx">min</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">max</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">range</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]},</span><span class="nx">equalto</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">validateIfUnchanged</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">===</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">val</span><span class="p">()},</span><span class="nx">remote</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">{},</span><span class="nx">g</span><span class="o">=</span><span class="p">{};</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">remoteDatatype</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">dataType</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">remoteDatatype</span><span class="p">});</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">remote</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="nx">c</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">remote</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">ulError</span><span class="o">+</span><span class="s2">&quot; .remote&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span></div><div class='line' id='LC9'><span class="nx">c</span><span class="p">.</span><span class="nx">updtConstraint</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;remote&quot;</span><span class="p">,</span><span class="nx">valid</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">manageValidationResult</span><span class="p">()},</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parseJSON</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="o">:</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">message</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">message</span><span class="o">:</span><span class="kc">null</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">ajax</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},{</span><span class="nx">url</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">remoteMethod</span><span class="o">||</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">success</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">m</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="o">||!</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">success</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">error</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span></div><div class='line' id='LC10'><span class="nx">m</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">))}},</span><span class="nx">g</span><span class="p">));</span><span class="k">return</span> <span class="kc">null</span><span class="p">},</span><span class="nx">mincheck</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">minlength</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">maxcheck</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">maxlength</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">rangecheck</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">rangelength</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}},</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">validators</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">messages</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">addValidator</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">addMessage</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])},</span><span class="nx">formatMesssage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">formatMesssage</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/%s/i</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">addValidator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">validators</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC11'><span class="nx">b</span><span class="p">},</span><span class="nx">addMessage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;!</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">type</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">type</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">messages</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="o">=</span><span class="k">new</span> <span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;ParsleyFieldMultiple&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;ParsleyField&quot;</span><span class="p">)};</span><span class="nx">j</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">constructor</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">valid</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">validatedOnce</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">val</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">isRequired</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="o">=</span></div><div class='line' id='LC12'><span class="p">{};</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">isRadioOrCheckbox</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isRadioOrCheckbox</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">hash</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">generateHash</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">errorClassHandler</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errors</span><span class="p">.</span><span class="nx">classHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">isRadioOrCheckbox</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ulErrorManagement</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">bindHtml5Constraints</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">addConstraints</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">hasConstraints</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">bindValidationEvents</span><span class="p">()},</span><span class="nx">setParent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">$parent</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">getParent</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">$parent</span><span class="p">},</span><span class="nx">bindHtml5Constraints</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;required&quot;</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;required&quot;</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">required</span><span class="o">=</span></div><div class='line' id='LC13'><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">RegExp</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),</span><span class="s2">&quot;i&quot;</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="s2">&quot;email url number range&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),</span><span class="nb">RegExp</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="s2">&quot;number range&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;number&quot;</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;min&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;min&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;min&quot;</span><span class="p">)),</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;max&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;max&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;max&quot;</span><span class="p">))));</span></div><div class='line' id='LC14'><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;pattern&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;pattern&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">regexp</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;pattern&quot;</span><span class="p">))},</span><span class="nx">addConstraints</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">addConstraint</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}},</span><span class="nx">addConstraint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">validators</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">requirements</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">valid</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="s2">&quot;required&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isRequired</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">addCustomConstraintMessage</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span></div><div class='line' id='LC15'><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">bindValidationEvents</span><span class="p">()},</span><span class="nx">updateConstraint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">updtConstraint</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">requirements</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">valid</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">b</span><span class="p">)},</span><span class="nx">updtConstraint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">],</span><span class="nx">a</span><span class="p">);</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">messages</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">bindValidationEvents</span><span class="p">()},</span><span class="nx">removeConstraint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="s2">&quot;required&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isRequired</span><span class="o">=!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">hasConstraints</span><span class="p">()</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">bindValidationEvents</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;ParsleyForm&quot;</span><span class="o">===</span></div><div class='line' id='LC16'><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">getParent</span><span class="p">()</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getParent</span><span class="p">().</span><span class="nx">removeItem</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()},</span><span class="nx">addCustomConstraintMessage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;Message&quot;</span><span class="p">;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">addMessage</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;type&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)},</span><span class="nx">bindValidationEvents</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">valid</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;parsley-validated&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">);</span></div><div class='line' id='LC17'><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">remote</span><span class="o">&amp;&amp;!</span><span class="sr">/change/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="o">=!</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="o">?</span><span class="s2">&quot;change&quot;</span><span class="o">:</span><span class="s2">&quot; change&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="sr">/key/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot; keyup&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="sr">/change/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot; change&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">on</span><span class="p">((</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">eventValidation</span><span class="p">,</span><span class="k">this</span><span class="p">))},</span><span class="nx">generateHash</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;parsley-&quot;</span><span class="o">+</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">substring</span><span class="p">(</span><span class="mi">2</span><span class="p">)},</span></div><div class='line' id='LC18'><span class="nx">getHash</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">hash</span><span class="p">},</span><span class="nx">getVal</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">val</span><span class="p">()},</span><span class="nx">eventValidation</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getVal</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;keyup&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;!</span><span class="sr">/keyup/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">validatedOnce</span><span class="o">||</span><span class="s2">&quot;change&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;!</span><span class="sr">/change/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">validatedOnce</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">isRadioOrCheckbox</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">validationMinlength</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">validatedOnce</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">validate</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">isValid</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">validate</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">hasConstraints</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC19'><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getVal</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">hasConstraints</span><span class="p">())</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listeners</span><span class="p">.</span><span class="nx">onFieldValidate</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="k">this</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">isRequired</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">reset</span><span class="p">(),</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">needsValidation</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">valid</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">errorBubbling</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">applyValidators</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">errorBubbling</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">manageValidationResult</span><span class="p">();</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">needsValidation</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">validateIfUnchanged</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">valid</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">val</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">validatedOnce</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span></div><div class='line' id='LC20'><span class="k">this</span><span class="p">.</span><span class="nx">val</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">validatedOnce</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">applyValidators</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">validators</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">name</span><span class="p">](</span><span class="k">this</span><span class="p">.</span><span class="nx">val</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">requirements</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="o">!</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">valid</span><span class="o">=</span><span class="nx">a</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">valid</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">manageValidationResult</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">)</span><span class="o">!</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">valid</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">manageError</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">b</span><span class="p">]),</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">valid</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">removeError</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">name</span><span class="p">),</span></div><div class='line' id='LC21'><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">valid</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">valid</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">removeErrors</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">errorClassHandler</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errorClass</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">successClass</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listeners</span><span class="p">.</span><span class="nx">onFieldSuccess</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">valid</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">errorClassHandler</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">successClass</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errorClass</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listeners</span><span class="p">.</span><span class="nx">onFieldError</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">ulErrorManagement</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">ulError</span><span class="o">=</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">hash</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ulTemplate</span><span class="o">=</span></div><div class='line' id='LC22'><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errors</span><span class="p">.</span><span class="nx">errorsWrapper</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">hash</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;parsley-error-list&quot;</span><span class="p">)},</span><span class="nx">removeError</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ulError</span><span class="o">+</span><span class="s2">&quot; .&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animate</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">fadeOut</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animateDuration</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">remove</span><span class="p">()})</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">ulError</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ulError</span><span class="p">).</span><span class="nx">children</span><span class="p">().</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeErrors</span><span class="p">()},</span><span class="nx">addError</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errors</span><span class="p">.</span><span class="nx">errorElem</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ulError</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animate</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]).</span><span class="nx">hide</span><span class="p">().</span><span class="nx">fadeIn</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animateDuration</span><span class="p">)</span><span class="o">:</span></div><div class='line' id='LC23'><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]))}},</span><span class="nx">removeErrors</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animate</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ulError</span><span class="p">).</span><span class="nx">fadeOut</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animateDuration</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">remove</span><span class="p">()})</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ulError</span><span class="p">).</span><span class="nx">remove</span><span class="p">()},</span><span class="nx">reset</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">valid</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeErrors</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">validatedOnce</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">errorClassHandler</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">successClass</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errorClass</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">constraints</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">valid</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">manageError</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ulError</span><span class="p">).</span><span class="nx">length</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">manageErrorContainer</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;required&quot;</span><span class="o">===</span></div><div class='line' id='LC24'><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">getVal</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">getVal</span><span class="p">().</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isRequired</span><span class="o">||!</span><span class="p">(</span><span class="s2">&quot;required&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">getVal</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">getVal</span><span class="p">().</span><span class="nx">length</span><span class="p">)))){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errorMessage</span><span class="o">?</span><span class="s2">&quot;custom-error-message&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errorMessage</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errorMessage</span><span class="o">:</span><span class="s2">&quot;type&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">messages</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">a</span><span class="p">.</span><span class="nx">requirements</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">messages</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">defaultMessage</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">formatMesssage</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="p">.</span><span class="nx">messages</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">requirements</span><span class="p">);</span></div><div class='line' id='LC25'><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ulError</span><span class="o">+</span><span class="s2">&quot; .&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">).</span><span class="nx">length</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">addError</span><span class="p">(</span><span class="nx">f</span><span class="p">))}},</span><span class="nx">manageErrorContainer</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errorContainer</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">errors</span><span class="p">.</span><span class="nx">container</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">isRadioOrCheckbox</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animate</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">ulTemplate</span><span class="p">.</span><span class="nx">show</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">ulTemplate</span><span class="p">;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:!</span><span class="k">this</span><span class="p">.</span><span class="nx">isRadioOrCheckbox</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">after</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">addListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listeners</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;parsley-validated&quot;</span><span class="p">);</span></div><div class='line' id='LC26'><span class="k">this</span><span class="p">.</span><span class="nx">reset</span><span class="p">().</span><span class="nx">$element</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">).</span><span class="nx">removeData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)}};</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initMultiple</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">Validator</span><span class="o">=</span><span class="k">new</span> <span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;ParsleyFieldMultiple&quot;</span><span class="p">)};</span><span class="nx">l</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">constructor</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">initMultiple</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">group</span><span class="o">||!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">hash</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getName</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">siblings</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="o">?</span><span class="s1">&#39;[data-group=&quot;&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="o">:</span><span class="s1">&#39;input[name=&quot;&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isRadioOrCheckbox</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isRadio</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;input[type=radio]&quot;</span><span class="p">);</span></div><div class='line' id='LC27'><span class="k">this</span><span class="p">.</span><span class="nx">isCheckbox</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;input[type=checkbox]&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">errorClassHandler</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">errors</span><span class="p">.</span><span class="nx">classHandler</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">isRadioOrCheckbox</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">parent</span><span class="p">()},</span><span class="nx">inherit</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;ParsleyFieldMultiple&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">])},</span><span class="nx">getName</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;parsley-&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">))</span><span class="k">throw</span><span class="s2">&quot;A radio / checkbox input must have a data-group attribute or a name to be Parsley validated !&quot;</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;parsley-&quot;</span><span class="o">+</span></div><div class='line' id='LC28'><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(:|\.|\[|\])/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">getVal</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isRadio</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">siblings</span><span class="o">+</span><span class="s2">&quot;:checked&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isCheckbox</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">siblings</span><span class="o">+</span><span class="s2">&quot;:checked&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">val</span><span class="p">())});</span><span class="k">return</span> <span class="nx">a</span><span class="p">}},</span><span class="nx">bindValidationEvents</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">valid</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;parsley-validated&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="sr">/change/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot; change&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+/g</span><span class="p">,</span></div><div class='line' id='LC29'><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">siblings</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventValidation</span><span class="p">,</span><span class="nx">a</span><span class="p">))})}};</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;parsleyForm&quot;</span><span class="p">)};</span><span class="nx">k</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">constructor</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">inputs</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">addItem</span><span class="p">(</span><span class="k">this</span><span class="p">)});</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;submit.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">validate</span><span class="p">,</span><span class="k">this</span><span class="p">))},</span><span class="nx">addListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="sr">/Field/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC30'><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">addListener</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listeners</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]},</span><span class="nx">addItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">excluded</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">parsley</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">setParent</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">removeItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">parsley</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">hash</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">hash</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">destroy</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">focusedField</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC31'><span class="o">!</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">validate</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">focusedField</span><span class="o">&amp;&amp;</span><span class="s2">&quot;first&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">focus</span><span class="o">||</span><span class="s2">&quot;last&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">focus</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">focusedField</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">$element</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">focusedField</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">focusedField</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">listeners</span><span class="p">.</span><span class="nx">onFormSubmit</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">isValid</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">isValid</span><span class="p">())</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">removeErrors</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">parsley</span><span class="p">(</span><span class="s2">&quot;reset&quot;</span><span class="p">)},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">destroy</span><span class="p">();</span></div><div class='line' id='LC32'><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">).</span><span class="nx">removeData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)},</span><span class="nx">reset</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">reset</span><span class="p">()}};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">parsley</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;parsleyForm&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">k</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;parsleyForm&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;parsleyField&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">j</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;parsleyField&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;parsleyFieldMultiple&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">l</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;parsleyFieldMultiple&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="p">}</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="nx">b</span><span class="p">),</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">?</span></div><div class='line' id='LC33'><span class="nx">e</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">e</span><span class="p">}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,{},</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">parsley</span><span class="p">.</span><span class="nx">defaults</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">ParsleyConfig</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">ParsleyConfig</span><span class="o">:</span><span class="p">{},</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">()),</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;form&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="s2">&quot;parsleyForm&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">inputs</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">excluded</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="o">!</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;input[type=radio], input[type=checkbox]&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;parsleyField&quot;</span><span class="o">:</span><span class="s2">&quot;parsleyFieldMultiple&quot;</span><span class="p">));</span><span class="k">return</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">()</span><span class="o">:</span><span class="nx">g</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">parsley</span><span class="p">.</span><span class="nx">Constructor</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">parsley</span><span class="p">.</span><span class="nx">defaults</span><span class="o">=</span><span class="p">{</span><span class="nx">inputs</span><span class="o">:</span><span class="s2">&quot;input, textarea, select&quot;</span><span class="p">,</span><span class="nx">excluded</span><span class="o">:</span><span class="s2">&quot;input[type=hidden], :disabled&quot;</span><span class="p">,</span></div><div class='line' id='LC34'><span class="nx">trigger</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">animate</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">animateDuration</span><span class="o">:</span><span class="mi">300</span><span class="p">,</span><span class="nx">focus</span><span class="o">:</span><span class="s2">&quot;first&quot;</span><span class="p">,</span><span class="nx">validationMinlength</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">successClass</span><span class="o">:</span><span class="s2">&quot;parsley-success&quot;</span><span class="p">,</span><span class="nx">errorClass</span><span class="o">:</span><span class="s2">&quot;parsley-error&quot;</span><span class="p">,</span><span class="nx">errorMessage</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">validators</span><span class="o">:</span><span class="p">{},</span><span class="nx">messages</span><span class="o">:</span><span class="p">{},</span><span class="nx">validateIfUnchanged</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">errors</span><span class="o">:</span><span class="p">{</span><span class="nx">classHandler</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">container</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">errorsWrapper</span><span class="o">:</span><span class="s2">&quot;&lt;ul&gt;&lt;/ul&gt;&quot;</span><span class="p">,</span><span class="nx">errorElem</span><span class="o">:</span><span class="s2">&quot;&lt;li&gt;&lt;/li&gt;&quot;</span><span class="p">},</span><span class="nx">listeners</span><span class="o">:</span><span class="p">{</span><span class="nx">onFieldValidate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">onFormSubmit</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">onFieldError</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">onFieldSuccess</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}};</span><span class="nx">d</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;[data-validate=&quot;parsley&quot;]&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parsley</span><span class="p">()})})}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="o">||</span></div><div class='line' id='LC35'><span class="nb">window</span><span class="p">.</span><span class="nx">Zepto</span><span class="p">);</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1347543525" height="64" width="64">
</div>


        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.07701s from fe17.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-icon mega-icon-invertocat"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/guillaumepotier/Parsley.js/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-icon mega-icon-normalscreen"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="mini-icon mini-icon-brightness"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.07754' data-host='fe17'></span>
    
  </body>
</html>

